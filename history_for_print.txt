   90  sudo snap install docker
   91  docker
   92  clear
   93  ls
   94  sudo apt-get install  redis-server
   95  sudo apt-get install  redis
   96  clear
   97  ls
   98  clear
   99  redis-server
  100  reboot
  101  sudo apt update
  102  sudo apt-get upgrade
  103  sudo apt install nginx
  104  clear
  105  sudo ufw app list
  106  sudo ufw allow 'Nginx HTTP'
  107  sudo ufw allow 'Nginx HTTPS'
  108  sudo ufw status
  109  sudo service ufw restart
  110  sudo ufw status
  111  systemctl status nginx
  112  ip addr show eth0 | grep inet | awk '{ print $2; }' | sed 's/\/.*$//'
  113  curl -4 icanhazip.com
  114  clear
  115  ls
  116  clear
  117  docker-compose
  118  clear
  119  ls
  120  git clone https://github.com/antibagr/skillready.git
  121  cd s
  122  ls
  123  cd skillready/
  124  clear
  125  git remote set-url origin git@github.com:antibagr/skillready.git
  126  git pull
  127  git config --global 
  128  git config --global user.name=antibagr
  129  git config --global user.email
  130  git config --global user.email antibagr@yandex.ru
  131  git config --global user.name antibagr
  132  clear
  133  git pull
  134  git remove -v
  135  git remote -v
  136  clear
  137  git pull origin master
  138  git config pull.rebase true
  139  git pull
  140  ssh -vT git@github.comm
  141  ssh -vT git@github.com
  142  clear
  143  ssh-add -l -E sha256
  144  ssh-keygen -t ed25519 -C "antibagr@yandex.ru"
  145  eval "$(ssh-agent -s)"
  146  ssh-add ~/.ssh/id_ed25519
  147  sudo apt-get install xclip
  148  xclip -selection clipboard < ~/.ssh/id_ed25519.pub
  149  xclip -selection clipboard < ~/.ssh/id_ed25519.pub 
  150  sudo xclip -selection clipboard < ~/.ssh/id_ed25519.pub 
  151  clear
  152  ls /.ssh
  153  ls /
  154  ls ~/.ssh/
  155  ls ~/.ssh/id_ed25519
  156  sudo xclip -selection clipboard < ~/.ssh/known_hosts 
  157  cat < ~/.ssh/id_ed25519
  158  cat < ~/.ssh/id_ed25519.pub
  159  cat < ~/.ssh/
  160  ls ~/.ssh/
  161  ls ~/.ssh/authorized_keys 
  162  clear
  163  git pull
  164  git status
  165  clear
  166  git pull
  167  docker-compose build
  168  сдуфк
  169  clear
  170  cd s
  171  cd sk
  172  ls
  173  clear
  174  cd skillready/
  175  clear
  176  git pull
  177  ls
  178  docker-compose build
  179  git pull
  180  clear
  181  docker-compose build
  182  ls
  183  git pull
  184  docker-compose build
  185  docker-compose up
  186  docker-compose up -d
  187  ping localhost:8000
  188  ping localhost -p 8000
  189  curl localhost:8000
  190  curl -4 icanhazip.com
  191  clear
  192  git pull
  193  clear
  194  docker ls
  195  docker-compose ls
  196  docker --help
  197  docker stop 
  198  clear
  199  docker ps
  200  curl -4 icanhazip.com
  201  clear
  202  chmod +X s
  203  ls
  204  chmod +X build.sh 
  205  ./build.sh
  206  chmod +ux build.sh 
  207  chmod +u build.sh 
  208  ./build.sh
  209  sudo bash build.sh 
  210  docker-compose up
  211  docker ps
  212  docker container ps
  213  cd skillready/
  214  docker container ps
  215  clear
  216  docker-compose up -d
  217  docker container ps
  218  ping localhost:8000
  219  ping localhost -p 80000
  220  clear
  221  docker pull mysql
  222  cd skillready/
  223  docker image inspect mysql
  224  ls /var/lib/
  225  clear
  226  docker container run -d --name mysql mysql
  227  docker container run -d --name mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=True mysql
  228  docker stop mysql
  229  docker container run -d --name mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=True mysql
  230  docker --help
  231  docker rm mysql
  232  docker container run -d --name mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=True mysql
  233  docker continer ps
  234  docker container ps
  235  clear
  236  docker container ps
  237  docker ps
  238  docker container ps
  239  ping localhost -p 3306
  240  ping localhost -p 3302
  241  curl localhost:3306
  242  curl localhost:33060
  243  clear
  244  docker container ps
  245  docker container inspect mysql
  246  ls /var/lib
  247  clear
  248  docker volume ls
  249  docker volume inspect 1c9e7a4a5463848371312085f7c319ddb9442994ab9bf6c9216b368472b691f2
  250  ls /var/snap/docker/common/var-lib-docker/volumes/1c9e7a4a5463848371312085f7c319ddb9442994ab9bf6c9216b368472b691f2/_data
  251  clear
  252  docker container ls
  253  docker container ls -a
  254  docker volume ls
  255  docker ls
  256  docker container run -d --name mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=True -v /var/lib/mysql mysql
  257  docker rm mysql
  258  docker container stop mysql
  259  docker container rm mysql
  260  docker container run -d --name mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=True -v mysql-db:/var/lib/mysql mysql
  261  docker container ls
  262  docker volume ls
  263  docker volume rm 1c9e
  264  docker volume rm  1c9e7a4a5463848371312085f7c319ddb9442994ab9bf6c9216b368472b691f2
  265  docker volume ls
  266  clear
  267  ls
  268  clear
  269  docker container inspect mysql
  270  docker volume inspect mysql-db
  271  ls /var/snap/docker/common/var-lib-docker/volumes/mysql-db/_data
  272  clear
  273  docker container rm -f mysql
  274  docker container run -d --name mysql2 -e MYSQL_ALLOW_EMPTY_PASSWORD=True -v mysql-db:/var/lib/mysql mysql
  275  docker continer ls
  276  docker container ls
  277  docker container inspect mysql2
  278  ll
  279  clear
  280  ll
  281  cd
  282  clear
  283  nano Dockerfile
  284  cat Dockerfile 
  285  sudo service stop nginx
  286  sudo service stop nginxd
  287  nginx stop
  288  nginx --help
  289  nginx 
  290  sudo systemctl status nginx
  291  sudo systemctl stop nginx
  292  clear
  293  docker run -d --name nginx -p 80:80 -v $(pwd):/usr/share/nginx/html nginx
  294  docker container ls
  295  docker container rm -f mysql2
  296  docker container status nginx
  297  docker container stats nginx
  298  docker container ls
  299  docker container rm -f nginx
  300  docker run -d --name nginx -p 5000:5000 -v $(pwd):/usr/share/nginx/html nginx
  301  nano Dockerfile 
  302  docker container stop skillready_web_1
  303  docker container stop nginx
  304  clear
  305  docker run -d --name nginx -v $(pwd):/usr/share/nginx/html nginx
  306  docker container rm nginx
  307  docker run -d --name nginx -v $(pwd):/usr/share/nginx/html nginx
  308  docker container rm -f nginx
  309  pwd
  310  mkdir nginx
  311  cd nginx
  312  clear
  313  docker run -d --name nginx -p 80:80 -v $(pwd):/usr/share/nginx/html nginx
  314  docker volume ls
  315  curl localhost:80
  316  docker run -d --name nginx2 -p 8080:80  nginx
  317  clear
  318  docker container exec -it nginx bash
  319  ls
  320  mv ../Dockerfile Dockerfile
  321  ls
  322  clear
  323  nano index.html
  324  docker container rm -f nginx
  325  docker run -d --name nginx -p 80:80 -v $(pwd):/usr/share/nginx/html nginx
  326  nano index.html 
  327  ls
  328  clear
  329  ls
  330  docker container ls
  331  clear
  332  docker run --name pg -d -e POSTGRES_PASSWORD=password -v pg_db:/var/lib/postgresql/data postgres:12.5
  333  docker container ls
  334  docker container logs pg
  335  docker container exec -it pg
  336  docker exec -it pg
  337  docker exec -it pg bash
  338  clear
  339  docker container rm -f pg
  340  docker volume ls
  341  docker volume inspect pg_db
  342  docker container run --name pg2 -d -e POSTGRES_PASSWORD=password -v pg_db:/var/lib/postgresql/data postgres:latest
  343  docker container ls
  344  docker run --name pg2 -d -e POSTGRES_PASSWORD=password -v pg_db:/var/lib/postgresql/data postgres:latest
  345  docker container rm -f pg2
  346  clear
  347  docker run --name pg2 -d -e POSTGRES_PASSWORD=password -v pg_db:/var/lib/postgresql/data postgres:latest
  348  docker container rm -f pg2
  349  docker run --name pg2 -d -e POSTGRES_PASSWORD=password -v pg_db:/var/lib/postgresql/data postgres:latest
  350  docker container ls
  351  docker container ls -a
  352  docker container logs pg2
  353  docker container rm -f pg2
  354  docker run --name pg2 -d -e POSTGRES_PASSWORD=password -v pg_db:/var/lib/postgresql13/data postgres:latest
  355  docker container logs pg2
  356  docker volume ls
  357  clear
  358  docker container exec -it pg bash
  359  docker container exec -it pg2 bash
  360  docker container exec -it pg2 psql
  361  docker container exec -it pg2 psql -U postgres
  362  clear
  363  docker container logs 
  364  clear
  365  sudo curl -L https://raw.githubusercontent.com/docker/compose/1.27.4/contrib/completion/bash/docker-compose -o /etc/bash_completion.d/docker-compose
  366  docker container logs apt-get update
  367  apt-get update
  368  apt-get install bash-completion -y
  369  docker-ce-cli
  370  clear
  371  docker-compose --help
  372  clear
  373  ls
  374  cd nginx
  375  clear
  376  nano docker-compose.yml
  377  ls
  378  touch nginx.conf
  379  ls
  380  docker-compose up
  381  nano docker-compose.yml
  382  docker-compose up
  383  nano docker-compose.yml
  384  docker-compose up
  385  nano docker-compose.yml
  386  docker-compose up
  387  nano docker-compose.yml
  388  docker-compose up
  389  nano docker-compose.yml
  390  docker-compose up
  391  nano docker-compose.yml
  392  docker-compose up
  393  clear
  394  docker-compose up
  395  clear
  396  docker-compose up
  397  nano docker-compose.yml
  398  docker-compose up
  399  nano docker-compose.yml
  400  clear
  401  docker container ls
  402  docker container stop nginx nginx2 pg2 nginx_web_1
  403  clear
  404  docker container ls
  405  docker-compose up
  406  nano docker-compose.yml
  407  docker-compose up
  408  chmod +u nginx.conf 
  409  docker-compose up
  410  nano docker-compose.yml
  411  clear
  412  docker-compose up
  413  docker-compose up -d 
  414  docker-compose top
  415  docker-compose down
  416  clear
  417  nano docker-compose.yml 
  418  docker-compose up
  419  nano docker-compose.yml 
  420  docker-compose up
  421  nano docker-compose.yml 
  422  docker-compose up
  423  nano docker-compose.yml 
  424  clear
  425  docker-compose up
  426  clear
  427  nano docker-compose.yml 
  428  clear
  429  docker-compose up
  430  clear
  431  docker-compose up -d
  432  docker-machine ip
  433  mkdir postgis && cd postgis
  434  clear
  435  docker run --name "postgis" -p 25432:5432 -d -t kartoza/postgis
  436  docker container ps
  437  docker container exec -it postgis psql
  438  docker container exec -it postgis psql -U postgres
  439  docker container exec -it postgis psql -U postgis
  440  docker container exec -it postgis bash
  441  clear
  442  docker container rm postgis
  443  docker container rm -f postgis
  444  docker run --name "postgis" -p 25432:5432 -e POSTGRES_PASS=example -d -t kartoza/postgis
  445  docker container exec postgis bash
  446  docker container exec -it postgis bash
  447  clear
  448  docker container ps
  449  docker container stop postgis
  450  docker container stop all
  451  docker container stop --all
  452  docker container stop --help
  453  docker container stop ngnix_drupal_1 nginx_psql_1
  454  docker container stop nginx_drupal_1 nginx_psql_1
  455  clear
  456  docker container ls
  457  docker run -d --name="django_cms" -p 80:80 divio/django-cms-preview
  458  clear
  459  docker container logs django_cms
  460  hostname -I
  461  hostname
  462  hostname --help
  463  hostname --a
  464  hostname -a
  465  hostname -A
  466  hostname -I
  467  hostname -s
  468  hostname -y
  469  hostname -F
  470  hostname -d
  471  hostname -l
  472  hostname -I
  473  clear
  474  docker container rm -f django_cms
  475  docker run -d --name="django_cms" vimagick/django-cms
  476  hostname -I
  477  docker container exec -it django_cms
  478  docker container logs django_cms
  479  clear
  480  docker container exec -it django_cms
  481  ls
  482  docker container exec -it django_cms bash
  483  docker container exec -it django_cms cmd
  484  docker container exec -it django_cms sl
  485  docker container exec -it django_cms ls
  486  docker container exec -it django_cms cat requr
  487  clear
  488  ls
  489  mkdir django_cms
  490  cd django_cms/
  491  clear
  492  nano docker-compose.yml
  493  clear
  494  docker container rm -f django_cms
  495  clear
  496  nano docker-compose.yml 
  497  docker-compose up -d
  498  docker-compose exec django-cms sh
  499  clear
  500  docker-compose down
  501  nano docker-compose.yml 
  502  docker-compose up
  503  nano docker-compose.yml 
  504  docker-compose up
  505  clear
  506  docker-compose ps
  507  docker-compose purge
  508  docker-compose rm django_cms_django-cms_1
  509  clear
  510  docker-compose up
  511  docker container ps
  512  docker container ps -a
  513  docker container rm  django_cms_django-cms_1 nginx_psql_1
  514  docker container rm nginx_drupal_1 pg2 nginx nginx2 skillready_web_1
  515  clear
  516  docker container ps -a
  517  docker container rm postgis
  518  clear
  519  docker-compose up
  520  nano docker-compose.yml 
  521  clear
  522  git clone https://github.com/kooba/django-cms-docker
  523  ls
  524  cd django-cms-docker/
  525  clear
  526  ls
  527  ll
  528  docker-compose up
  529  nano .env
  530  ls web
  531  ls nginx
  532  nano web/mycms/settings.py 
  533  clear
  534  ls
  535  nano .env 
  536  clear
  537  ls
  538  docker-compose up -d
  539  docker-container ps
  540  docker-compose ps
  541  docker container exec -it django-cms-docker_postgres_1 psql -U postgres
  542  nano .env 
  543  clear
  544  docker container exec -it django-cms-docker_postgres_1 psql -U postgres
  545  docker container logs django-cms-docker_postgres_1
  546  docker container logsdockeasdnqjwkeln django-cms-docker_postgres_1
  547  clear
  548  docker container ps
  549  docker container exec -it django-cms-docker_data_1 bash -c "export POSTGRES_PASSWORD=example"
  550  docker container stop django-cms-docker_data_1
  551  clear
  552  docker-compose down
  553  nano docker-compose
  554  nano docker-compose.yml 
  555  docker-compose up
  556  nano docker-compose.yml 
  557  docker-compose up
  558  nano docker-compose
  559  nano docker-compose.yml 
  560  nano .env 
  561  clear
  562  docker-compose up
  563  nano .env 
  564  clear
  565  docker-compose up
  566  clear
  567  docker-compose up --build
  568  docker-compose up --build -d
  569  docker container exec -it django-cms-docker_web_1 bash
  570  nano .env 
  571  clear
  572  cd ../
  573  rm -r django-cms-docker/
  574  ls
  575  clear
  576  docdocker rm $(docker ps -a -q)
  577  clear
  578  docker rm -f $(docker ps -a -q)
  579  docker ps
  580  clear
  581  mkdir wagtail
  582  cd wagtail/
  583  clear
  584  git clone git@github.com:wagtail/docker-wagtail-develop.git wagtail-dev
  585  cd wagtail-dev/
  586  ./setup
  587  ./setup.sh 
  588  docker-compose build
  589  ls
  590  ls bakerydemo/
  591  nano bakerydemo/requirements.txt 
  592  nano bakerydemo/requirements/production.txt 
  593  docker-compose build
  594  docker-compose up
  595  docker-compose up -d
  596  docker container exec web bash
  597  docker container exec -ti web bash
  598  docker container exec -it web bash
  599  setup-db.sh
  600  ls
  601  cd ../
  602  ls
  603  cd wagtail-dev/
  604  . 
  605  . setup-db.sh
  606  clear
  607  cd
  608  mkdir django
  609  cd django
  610  clear
  611  python3.9 -V
  612  python3.9 -m venv venv
  613  sudo apt-get install python3-venv
  614  clear
  615  sudo apt-get install python3-venv
  616  python3.9 -m venv venv
  617  sudo apt-get install python3.9-venv
  618  clear
  619  python3.9 -m venv venv
  620  python3.9 -m pip install --upgrade pip
  621  sudo apt-get install python3.9-pip
  622  . venv/bin/activate
  623  python -V
  624  clear
  625  pip -V
  626  pip install --upgrade pip
  627  clear
  628  python -m pip --version
  629  python -m pip install django
  630  clear
  631  ls
  632  nano Dockerfile
  633  nano requirements.txt
  634  django-admin startproject fullstack
  635  ls
  636  cd fullstack/
  637  ls
  638  cd fullstack/
  639  ls
  640  nano settings.py 
  641  cd ../../
  642  clear
  643  ls
  644  pip install -r requirements.txt 
  645  clear
  646  nano docker-compose.yml
  647  cp fullstack/* .
  648  cp -r fullstack/* .
  649  ls
  650  ls fullstack/
  651  rm manage.py 
  652  ls
  653  clear
  654  mv fullstack/* .
  655  mv -r fullstack/* .
  656  mv fullstack/ fullstack2/
  657  ls
  658  cd fullstack2/
  659  ls
  660  cd fullstack/
  661  ls
  662  mv * ../
  663  ls
  664  cd ../
  665  clear
  666  ls
  667  rm fullstack/
  668  rm -r fullstack/
  669  cd ../
  670  ls
  671  mv fullstack2/ fullstack/
  672  clear
  673  ls
  674  python manage.py runserver
  675  docker container ps
  676  docker container stop web frontend db
  677  clear
  678  ls
  679  python -V
  680  clear
  681  python manage.py runserver
  682  python manage.py migrate
  683  clear
  684  python manage.py makemigrations
  685  clear
  686  python manage.py runserver
  687  ды
  688  ls
  689  nano settings.py 
  690  clear
  691  python manage.py runserver http://45.79.174.65:8000/
  692  python manage.py runserver http://45.79.174.65:8000
  693  python manage.py runserver45.79.174.65:8000
  694  python manage.py runserver 45.79.174.65:8000
  695  clear
  696  python djangoadmin createuser
  697  python django-admin createuser
  698  clear
  699  sudo docker-compose run web django-admin startproject composeexample .
  700  clear
  701  docker-compose run web django-admin startproject composeexample .
  702  nano requirements.txt 
  703  docker-compose run web django-admin startproject composeexample .
  704  nano requirements.txt 
  705  clear
  706  docker-compose run web django-admin startproject composeexample .
  707  nano Dockerfile 
  708  nano docker-compose.yml 
  709  clear
  710  docker-compose run web django-admin startproject composeexample .
  711  docker-compose ps
  712  docker-compose rm django_db_1
  713  docker container rm django_db_1
  714  docker container -f rm django_db_1
  715  docker container rm -f django_db_1
  716  clear
  717  docker-compose run web django-admin startproject composeexample .
  718  ls
  719  docker-compose up
  720  clear
  721  nano docker-compose.yml 
  722  clear
  723  docker-compose up
  724  clear
  725  ls
  726  nano settings.py 
  727  docker-compose up
  728  docker-compose up --build
  729  clear
  730  nano settings.py 
  731  clear
  732  python manage.py runserver
  733  nano settings.py 
  734  nano manage.py 
  735  clear
  736  python manage.py runserver
  737  docker-compose up
  738  clear
  739  nano docker-compose.yml 
  740  docker-compose up
  741  nano manage.py 
  742  nano requirements.txt 
  743  docker-compose up
  744  clear
  745  docker-compose up --build
  746  nano requirements.txt 
  747  clear
  748  nano settings.py 
  749  ls
  750  ls fullstack/
  751  nano fullstack/settings.py 
  752  ls
  753  rm asgi.py db.sqlite3 __init__.py settings.py urls.py wsgi.py 
  754  clear
  755  ls
  756  python manage.py runserver
  757  clear
  758  ls
  759  nano fullstack/settings.py 
  760  touch m.sh
  761  chmod 600 m
  762  chmod 600 m.sh 
  763  nano m.sh 
  764  ./m.sh
  765  sudo chmod +x m.sh
  766  ./m.sh
  767  clear
  768  python -m pip install psycopg2-binary
  769  clear
  770  docker-compose up --build
  771  docker-compose up -d
  772  docker container exec -it django_web_1 bash
  773  clear
  774  ls
  775  docker-compose ps
  776  python -m pip install django-admin
  777  clear
  778  docker container exec -it django_web_1 bash
  779  clear
  780  ls
  781  python django-admin createuser
  782  docker container exec -it django_web_1 bash
  783  nano Dockerfile 
  784  clear
  785  ls
  786  git clone git@github.com/antibagr/skillready.git
  787  git clone git@github.com:antibagr/skillready.git
  788  ls
  789  cd skillready/
  790  ls
  791  cp ../django ./django
  792  cp -r ../django ./django
  793  git add .
  794  git commit -m "add django folder with ready-to-use docker build and new django project"
  795  clear
  796  git push origin master
  797  clear
  798  ls
  799  cd django
  800  ls
  801  cat Dockerfile 
  802  cat docker-compose.yml 
  803  cat m.sh 
  804  alias log="git log --pretty=oneline $@"
  805  log
  806  ls
  807  cd skillready/
  808  log
  809  log --help
  810  log -L 1 2
  811  log -L 1 
  812  log -L 1,2:app.py 
  813  log -L 1,3:app.py 
  814  log -L 1,52:app.py 
  815  log -L 1,2:app.py 
  816  clear
  817  log
  818  cd
  819  gedit ~/.bashrc
  820  nano ~/.bashrc
  821  . ~/.bashrc
  822  l
  823  cd skillready/
  824  l
  825  nano ~/.bashrc
  826  l
  827  exec ~/.bashrc
  828  bashs ~/.bashrc
  829  bash ~/.bashrc
  830  . ~/.bashrc
  831  clear
  832  l
  833  clear
  834  l --help
  835  l -L 1,2:app.py 
  836  l -L 1,2:build.sh 
  837  clear
  838  ll
  839  ls
  840  clear
  841  cat ~/.bashrc | grep "ll"
  842  ls -alF
  843  ls --help
  844  clear
  845  ls -al
  846  ls -a
  847  clear
  848  ls -l
  849  ls -la
  850  ls -laF
  851  clear
  852  cd
  853  z
  854  clear
  855  nano ~/.basrc
  856  nano ~/.bashrc
  857  s
  858  . ~/.bashrc
  859  cd skillready/
  860  s
  861  s --help
  862  s -s
  863  s
  864  s --help
  865  s -v
  866  s --help
  867  clear
  868  cd skillready/
  869  ll gi
  870  ll 
  871  ll .git
  872  cat config
  873  cat .git\config
  874  clear
  875  ls
  876  cd .git
  877  clear
  878  ll
  879  cat config 
  880  cat HEAD
  881  cd skillready/.git
  882  clear
  883  ls
  884  ll
  885  cat packed-refs 
  886  cat index
  887  Bitvise SSH ClientBitvise SSH Client
  888  cd skillready/
  889  cd .git
  890  clear
  891  ll
  892  cat description 
  893  echo "skillready" > description 
  894  cat description 
  895  cat COMMIT_EDITMSG 
  896  l
  897  clear
  898  ls --help
  899  clear
  900  cd ../
  901  ls
  902  l
  903  clear
  904  ll
  905  less docker-compose.yml 
  906  ll django/
  907  ll django/fullstack/
  908  less django/fullstack/settings.py 
  909  clear
  910  less --help
  911  less django/fullstack/settings.py 
  912  less --help
  913  less django/fullstack/settings.py 
  914  less --help
  915  less django/fullstack/settings.py 
  916  less --help
  917  less django/fullstack/settings.py 
  918  less --help
  919  less django/fullstack/settings.py 
  920  less --help
  921  clear
  922  ll .git
  923  cd .git
  924  clear
  925  ls
  926  ll
  927  cd objects/
  928  clear
  929  ll
  930  ll info
  931  ll info/
  932  ll pack/
  933  ls pack/
  934  ls fe/
  935  ll fe/
  936  less fe/bbedcd5e8ca0fd12e38203020123859d454308
  937  clear
  938  cd ../../
  939  clear
  940  s
  941  clear
  942  touch empty
  943  git hash-object -w touch
  944  git hash-object -w empty
  945  find .git/objects -type f
  946  find .git/objects -type f | grep e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
  947  find .git/objects -type f | grep "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391"
  948  clear
  949  git cat-file -p e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
  950  ls
  951  mv empty empty.txt
  952  clear
  953  ls
  954  s
  955  clear
  956  find .git/objects -type f 
  957  rm .git/objects/*
  958  rm --r .git/objects/*
  959  rm -r .git/objects/*
  960  rm -rf .git/objects/*
  961  clear
  962  find .git/objects -type f 
  963  rm empty.txt 
  964  touch empty.txt
  965  clear
  966  find .git/objects -type f
  967  git hash-object -w empty.txt
  968  find .git/objects -type f
  969  less .git/objects/e6/9de29bb2d1d6434b8b29ae775ad8c2e48c5391 
  970  echo "Hello Git" > empty.txt 
  971  git hash-object -w empty.txt
  972  git cat-file -p 9f4d96d5b00d98959ea9960f069585ce42b1349a
  973  git update-index --help
  974  git update-index --cachedinfo 100644 9f4d96d5b00d98959ea9960f069585ce42b1349a empty.txt
  975  git update-index --cacheinfo 100644 9f4d96d5b00d98959ea9960f069585ce42b1349a empty.txt
  976  git update-index --cacheinfo 100644 9f4d96d5b00d98959ea9960f069585ce42b1349a empty.txt --add
  977  git update-index --add --cacheinfo 100644 9f4d96d5b00d98959ea9960f069585ce42b1349a empty.txt
  978  git ls-files --stage
  979  git ls-files --stage | grep "empty.txt"
  980  s
  981  status
  982  git status
  983  git checkout
  984  git checkout -b mqwe
  985  cler
  986  clear
  987  ls
  988  s
  989  l
  990  less .git/HEAD
  991  git rull origin master
  992  git pull origin master
  993  git reset --hard
  994  nano .git/READ
  995  nano .git/HEAD 
  996  git pull
  997  git commit -m 'qwe
'
  998  ls
  999  cd .git
 1000  clear
 1001  ls
 1002  cat ORIG_HEAD 
 1003  git fetch origin
 1004  git reset --hard origin/master
 1005  cd ../
 1006  git reset --hard origin/master
 1007  l
 1008  clear
 1009  git ls-files 
 1010  git ls-files --help
 1011  git ls-files --stage
 1012  clear
 1013  l
 1014  git branch list
 1015  git branch --list
 1016  git branch -d list
 1017  git branch --list
 1018  clear
 1019  echo "Hello Git" > myfile.txt 
 1020  git hash-object -w myfile.txt
 1021  git cat-file -p 9f4d96d5b00d98959ea9960f069585ce42b1349a
 1022  git update-index --add --cacheinfo 100644 \ 9f4d96d5b00d98959ea9960f069585ce42b1349a myfile.txt
 1023  git update-index --add --cacheinfo 100644 9f4d96d5b00d98959ea9960f069585ce42b1349a myfile.txt
 1024  git ls-files --stage
 1025  git ls-files --stage | grep "myfile.txt"
 1026  s
 1027  clear
 1028  s
 1029  git write-tree
 1030  echo "first commit" | git commit-tree 6e9432aeedbad83fbffb7f8aae4a5d1ab50b7fdf
 1031  echo "first commit" | git commit-tree 45c0dc318047c26c8114ef4053bad9a2d592bc20
 1032  git cat-file -p c5c38c38461ed16b934fb036752e0dbfe6344cc0
 1033  git log -stat c5c38c38461ed16b934fb036752e0dbfe6344cc0
 1034  git log --stat c5c38c38461ed16b934fb036752e0dbfe6344cc0
 1035  s
 1036  clear
 1037  echo "Hello Git Pro" > myfile.txt
 1038  s
 1039  git update-index myfile.txt
 1040  s
 1041  git write-tree
 1042  echo "second commit" | git commit-tree c5c38c38461ed16b934fb036752e0dbfe6344cc0 -p c82fa80f5d047a8de26d96fb29914f3efada4be8
 1043  s
 1044  git log
 1045  git log --help
 1046  git log -n 2
 1047  echo "second commit" | git commit-tree f25685e8e42db6b4efcf24cefa35e7ad5d3dbe79 -p 2e9342f50ceb6de80945059d197c48d974ae9473
 1048  echo "second commit" | git commit-tree echo "second commit" | git commit-tree c5c38c38461ed16b934fb036752e0dbfe6344cc0 -p c82fa80f5d047a8de26d96fb29914f3efada4be8
 1049  echo "second commit" | git commit-tree c5c38c38461ed16b934fb036752e0dbfe6344cc0 -p c5c38c38461ed16b934fb036752e0dbfe6344cc0
 1050  clear
 1051  s
 1052  git restore --hard
 1053  git restore -hard
 1054  git reset --hard
 1055  clear
 1056  s
 1057  l
 1058  clear
 1059  ls
 1060  cd ../
 1061  clear
 1062  mkdir git_rd
 1063  cd git_rd/
 1064  clear
 1065  git init
 1066  git config
 1067  git config --get-all
 1068  git config -get-all
 1069  git config --get-all
 1070  git config --get-all --global
 1071  git config --global --get-all *
 1072  git config --global --get-all "*"
 1073  git config --global --get-all ".+"
 1074  git config --global
 1075  git config --global --get-regexp "*"
 1076  git config --global --get-regexp ".+"
 1077  git config --global --get-regexp ".?"
 1078  git config --global --get-regexp "."
 1079  git config --global --get-regexp "\d"
 1080  git config --global --get-regexp ""
 1081  git config --global --get-regexp
 1082  git config --global --get-regexp ""
 1083  clear
 1084  ll
 1085  s
 1086  cmd >> check_this_out.txt
 1087  cmdc >> check_this_out.txt
 1088  clear
 1089  history > history_for_print.txt
